import { expect, test } from "@playwright/test";

test("Assignment 2", async ({ page }) => {
  await page.goto(
    "http://localhost:3000/auth?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2F"
  );
  await page.getByText("Sign Up").click();
  await page.getByPlaceholder("name").click();
  await page.getByPlaceholder("name").fill("testy@testy.nl");
  await page.getByPlaceholder("name").press("Tab"); // This is not strictly needed, but is generated by the recorder
  await page.getByPlaceholder("email@gmail.com").fill("test@testy.nl");
  await page.getByPlaceholder("email@gmail.com").press("Tab"); // This is not strictly needed, but is generated by the recorder
  await page.getByPlaceholder("********").fill("test");

  // Set up Mocking First, then press Sign Up
  await page.route("**/api/register", (route) => {
    route.fulfill({ status: 409 });
  });

  await page.getByLabel("Sign Up").click();

  await expect(
    page
      .getByRole("alert")
      .filter({ has: page.getByText("User Already exists") })
  ).toBeVisible();
});
