import { AccountGenerator } from "@/test/fixtures/accountGenerator.fixture";
import {
  expect,
  test as setup,
} from "../../support/fixtures/resetRoutes.fixture";

const authFile = "playwright/.auth/user.json";

setup("authenticate", async ({ page }) => {
  const generator = new AccountGenerator();
  const user = generator.createRandomUser();

  await page.goto(
    "http://localhost:3000/auth?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2F"
  );
  await page.getByText("Sign Up").click();
  await page.getByPlaceholder("name").click();
  await page.getByPlaceholder("name").fill(user.name);
  await page.getByPlaceholder("name").press("Tab"); // This is not strictly needed, but is generated by the recorder
  await page.getByPlaceholder("email@gmail.com").fill(user.email);
  await page.getByPlaceholder("email@gmail.com").press("Tab"); // This is not strictly needed, but is generated by the recorder
  await page.getByPlaceholder("********").fill(user.password);
  await page.getByLabel("Sign Up").click();
  await page.getByPlaceholder("email@gmail.com").click(); // This is not strictly needed, but is generated by the recorder
  await page.getByPlaceholder("email@gmail.com").fill(user.email);
  await page.getByPlaceholder("email@gmail.com").press("Tab"); // This is not strictly needed, but is generated by the recorder
  await page.getByPlaceholder("********").fill(user.password);
  await page.getByTestId("auth-page").getByLabel("Sign In").click();
  await expect(page.getByRole("paragraph")).toContainText("No Todos found.");
  await page.context().storageState({ path: authFile });
});
